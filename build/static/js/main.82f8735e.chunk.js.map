{"version":3,"sources":["components/Height.js","Route/Router.js","App.js","reportWebVitals.js","index.js"],"names":["ChangeWidth","Router","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAyBeA,ICZAC,IAAf,ECqCeC,MAnCf,WAME,OACE,qBAAKC,UAAU,MAAf,SAEE,cAACF,EAAD,OCZSG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.82f8735e.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport '../Sass/components/test.scss';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction ChangeWidth(){\r\n\r\n    const [scrolled, setScrolled] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", () => {\r\n            setScrolled(window.scrollY > 200);\r\n        });\r\n    }, []);\r\n\r\n    return(\r\n        <>\r\n        <section className={scrolled ? \"head\" : \"head2\"}>\r\n        <div>\r\n            <Link to=\"/\">Home</Link>\r\n        </div>\r\n            <h1>Juste du texte qui ressort un peu</h1>\r\n        </section>\r\n        </>\r\n    )\r\n}\r\nexport default ChangeWidth","import React from 'react';\r\nimport{BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\r\nimport Card from '../components/Card';\r\nimport Height from '../components/Height';\r\n\r\nconst Routeur = () => (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Card} />\r\n        <Route path=\"/yo\" component={Height}/>\r\n      </Switch>                    \r\n    </Router>\r\n  ); \r\nexport default Router","//import logo from './logo.svg';\nimport './App.scss';\n//import Hello from './components/Hello';\n//import TableFactorise from './components/TableFactorise';\n//import Card from './components/Card';\n//import TestCard from './components/TestCard';\n//import JsxExemple from './components/JsxExemple';\n//import smaug from './Asset/smaug.jpg';\n//import ConcatName from './components/ConcatName';\n//import data from './Data/Data.json';\n//import UseStateExemple from './Hooks/UseStateExemple';\n//import UseStateTest from './Hooks/UseState';\n//import UseEffect from './Hooks/UseEffect';\nimport Router from './Route/Router';\n\nfunction App() {\n\n  //const name = 'DUCHE';\n  //const prenom = 'Allan';\n  //const element = <h1>Bonjour , {prenom} {name}</h1>\n  \n  return (\n    <div className=\"App\">\n    \n      <Router/>\n\n      {/* \n      <div>\n        <header className=\"App-header\">\n          <> \n            <Hello name=\"Allan DUCHE\"/>\n          </>\n          <Card title=\"lorem\" desc=\"lorem ipsum dolor sit amet\" image={logo}></Card>\n          <>\n            <TestCard title=\"lo\" desc=\"test\" img={smaug}></TestCard>\n            <JsxExemple/>\n            <ConcatName/>\n          </>\n        </header>\n        <TableFactorise data={data}/>\n        <UseStateExemple/>\n        <UseStateTest/>\n        <UseEffect/>\n      </div>\n      */}\n    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}